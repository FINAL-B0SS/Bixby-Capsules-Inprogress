action (SubmitServiceRequest) {
	description (An action that takes a required Spot as an input)
	type (Calculation)
	collect {
		input (serviceInfo) {
			type (ServiceInfo)
			min (Required) max (One)
			default-init {
				intent {
					goal: GetServiceInfo
				}
			}
		}
		input (voiceNatureOfrequest) {
			type (VoiceNatureOfRequest)
			min (Optional) max (One)
		}
		input (natureOfRequest) {
			type (NatureOfRequest)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName != 'Abandoned Vehicles' &&serviceInfo.serviceName != 'Blocked Pedestrian Walkway' &&serviceInfo.serviceName != 'Encampment' && serviceInfo.serviceName != 'Graffiti' && serviceInfo.serviceName != 'Parking & Traffic Sign Repair' && serviceInfo.serviceName != 'Street or Sidewalk Cleaning' && serviceInfo.serviceName != 'Streetlight Repair' && serviceInfo.serviceName != 'Flooding & Sewer Issues') {
					intent {
						goal: BuildNatureOfRequest
						value: $expr(serviceInfo)
						value: $expr(voiceNatureOfrequest)
					}
				} else {
					intent {
						goal: NatureOfRequest
						value: NatureOfRequest {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (firstName) {
			type (FirstName)
			min (Required) max (One)
		}
		input (lastName) {
			type (LastName)
			min (Required) max (One)
		}
		input (email) {
			type (Email)
			min (Required) max (One)
		}
		input (phone) {
			type (Phone)
			min (Required) max (One)
		}
		input (description) {
			type (Description)
			min (Required) max (One)
		}
		input (voicePoleType) {
			type (VoicePoleType)
			min (Optional) max (One)
		}
		input (poleType) {
			type (PoleType)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Streetlight Repair') {
					intent {
						goal: BuildPoleType
						value: $expr(voicePoleType)
					}
				} else {
					intent {
						goal: PoleType
						value: PoleType {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceSignStatus) {
			type (VoiceSignStatus)
			min (Optional) max (One)
		}
		input (signStatus) {
			type (SignStatus)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Parking & Traffic Sign Repair') {
					intent {
						goal: BuildSignStatus
						value: $expr(voiceSignStatus)
					}
				} else {
					intent {
						goal: SignStatus
						value: SignStatus {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceSignType) {
			type (VoiceSignType)
			min (Optional) max (One)
		}
		input (signType) {
			type (SignType)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Parking & Traffic Sign Repair') {
					intent {
						goal: BuildSignType
						value: $expr(voiceSignType)
					}
				} else {
					intent {
						goal: SignType
						value: SignType {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voicePoleStatus) {
			type (VoicePoleStatus)
			min (Optional) max (One)
		}
		input (poleStatus) {
			type (PoleStatus)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Parking & Traffic Sign Repair') {
					intent {
						goal: BuildPoleStatus
						value: $expr(voicePoleStatus)
					}
				} else {
					intent {
						goal: PoleStatus
						value: PoleStatus {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceType) {
			type (VoiceType)
			min (Optional) max (One)
		}
		input (type) {
			type (Type)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Streetlight Repair' || serviceInfo.serviceName == 'Flooding & Sewer Issues') {
					intent {
						goal: BuildType
						value: $expr(voiceType)
					}
				} else {
					intent {
						goal: Type
						value: Type {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceWholeBlock) {
			type (VoiceWholeBlock)
			min (Optional) max (One)
		}
		input (wholeBlock) {
			type (WholeBlock)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Illegal Postings') {
					intent {
						goal: BuildWholeBlock
						value: $expr(voiceWholeBlock)
					}
				} else {
					intent {
						goal: WholeBlock
						value: WholeBlock {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceContainsRacial) {
			type (VoiceContainsRacial)
			min (Optional) max (One)
		}
		input (containsRacialSlursOrProfanity) {
			type (ContainsRacialSlursOrProfanity)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Graffiti') {
					intent {
						goal: BuildContainsRacialSlursOrProfanity
						value: $expr(voiceContainsRacial)
					}
				} else {
					intent {
						goal: ContainsRacialSlursOrProfanity
						value: ContainsRacialSlursOrProfanity {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceTents) {
			type (VoiceTents)
			min (Optional) max (One)
		}
		input (howManyTents) {
			type (HowManyTents)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Encampment') {
					intent {
						goal: BuildHowManyTents
						value: $expr(voiceTents)
					}
				} else {
					intent {
						goal: HowManyTents
						value: HowManyTents {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voicePeople) {
			type (VoicePeople)
			min (Optional) max (One)
		}
		input (howManyPeople) {
			type (HowManyPeople)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Encampment') {
					intent {
						goal: BuildHowManyPeople
						value: $expr(voicePeople)
					}
				} else {
					intent {
						goal: HowManyPeople
						value: HowManyPeople {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (voiceObject) {
			type (VoiceObject)
			min (Optional) max (One)
		}
		input (object) {
			type (Object)
			min (Required) max (One)
			default-init {
				if (serviceInfo.serviceName == 'Blocked Pedestrian Walkway' || serviceInfo.serviceName == 'Graffiti' || serviceInfo.serviceName == 'Street or Sidewalk Cleaning') {
					intent {
						goal: BuildObject
						value: $expr(voiceObject)
					}
				} else {
					intent {
						goal: Object
						value: Object {
							key: (NULL)
							name: (NULL)
						}
					}
				}
			}
		}
		input (location) {
			type (Location)
			min (Required) max (One)
			default-init {
				intent {
					goal: Location
					route: geo.CurrentLocation
				}
			}
		}
	}
	output (ServiceRequestId)
}